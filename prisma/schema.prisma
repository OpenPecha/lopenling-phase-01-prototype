// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @unique @default(uuid())
  name             String
  username         String          @unique
  email            String          @unique
  role             Role            @default(BASIC)
  isAdmin          Boolean
  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  Question         Question[]
  Annotation       Annotation[]
  Likes            Likes[]
  DisLikes         DisLikes[]

  @@index([email])
}

model UserPreference {
  id       String @id @default(uuid())
  language String @default("en")
  fontSize Int    @default(14)
  theme    String @default("dark")
  User     User[]
}

enum Role {
  BASIC
  SCHOLAR
}

model Question {
  id          String     @id
  categoryId  Int
  topicId     Int
  topic       String
  createrUser User       @relation(fields: [userId], references: [id])
  userId      String
  start       Int
  end         Int
  textId      Int
  likes       Likes[]
  dislikes    DisLikes[]
}

model Likes {
  id         Int       @unique @default(autoincrement())
  likeBy     User      @relation(fields: [userId], references: [id])
  userId     String    @unique
  Question   Question? @relation(fields: [questionId], references: [id])
  questionId String?
}

model DisLikes {
  id         Int       @unique @default(autoincrement())
  dislikeBy  User      @relation(fields: [userId], references: [id])
  userId     String    @unique
  Question   Question? @relation(fields: [questionId], references: [id])
  questionId String?
}

model Annotation {
  id              String   @id @default(uuid())
  creator_user    User     @relation(fields: [userId], references: [id])
  userId          String
  start           Int
  length          Int
  is_deleted      Boolean  @default(false)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  type            String
  original        String
  modifiedContent String
}
